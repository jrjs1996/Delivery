{"remainingRequest":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\source-map-loader\\index.js!F:\\projects\\Node\\delivery\\client\\src\\Components\\Admin\\Settings\\SettingPage\\InputList\\InputList.js","dependencies":[{"path":"F:\\projects\\Node\\delivery\\client\\src\\Components\\Admin\\Settings\\SettingPage\\InputList\\InputList.js","mtime":1562449721023},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\source-map-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6XFxVc2Vyc1xcanJqczFcXEFwcERhdGFcXFJvYW1pbmdcXG5wbVxcbm9kZV9tb2R1bGVzXFxkb2N6XFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwp2YXIgX2pzeEZpbGVOYW1lID0gIkY6XFxwcm9qZWN0c1xcTm9kZVxcZGVsaXZlcnlcXGNsaWVudFxcc3JjXFxDb21wb25lbnRzXFxBZG1pblxcU2V0dGluZ3NcXFNldHRpbmdQYWdlXFxJbnB1dExpc3RcXElucHV0TGlzdC5qcyI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5kZWZhdWx0LnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgppbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7CmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7CmltcG9ydCBzaG9ydGlkIGZyb20gJ3Nob3J0aWQnOwppbXBvcnQgeyBCdXR0b24sIEdyaWQsIFR5cG9ncmFwaHkgfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZSc7CmltcG9ydCBEZWxldGVJY29uIGZyb20gJ0BtYXRlcmlhbC11aS9pY29ucy9EZWxldGUnOwppbXBvcnQgU2V0dGluZ1BhZ2VJbnB1dCBmcm9tICcuLi9TZXR0aW5nUGFnZUlucHV0L1NldHRpbmdQYWdlSW5wdXQnOwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbnB1dExpc3QoewogIG9uQ2hhbmdlLAogIG5hbWUsCiAgdmFsdWUsCiAgdGl0bGUKfSkgewogIGNvbnN0IF91c2VTdGF0ZSA9IHVzZVN0YXRlKHZhbHVlLm1hcCgoKSA9PiBzaG9ydGlkLmdlbmVyYXRlKCkpKSwKICAgICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgICBrZXlzID0gX3VzZVN0YXRlMlswXSwKICAgICAgICBzZXRLZXlzID0gX3VzZVN0YXRlMlsxXTsKCiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIG5hbWU6IG5hbWUsCiAgICBzdHlsZTogewogICAgICBtYXJnaW5Ub3A6IDEwLAogICAgICBtYXJnaW5Cb3R0b206IDEwCiAgICB9LAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFR5cG9ncmFwaHksIHsKICAgIGFsaWduOiAibGVmdCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIHRpdGxlKSwgdmFsdWUubWFwKCh2LCBpKSA9PiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBrZXk6IGtleXNbaV0sCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoR3JpZCwgewogICAgY29udGFpbmVyOiB0cnVlLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KEdyaWQsIHsKICAgIGl0ZW06IHRydWUsCiAgICB4czogOSwKICAgIHM6IDExLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFNldHRpbmdQYWdlSW5wdXQsIHsKICAgIHJlcXVpcmVkOiB0cnVlLAogICAgZnVsbFdpZHRoOiB0cnVlLAogICAgbGFiZWw6ICIiLmNvbmNhdChuYW1lLCAiICIpLmNvbmNhdChpKSwKICAgIG5hbWU6ICIiLmNvbmNhdChuYW1lKS5jb25jYXQoaSksCiAgICB2YWx1ZTogdiwKICAgIG9uQ2hhbmdlOiBlID0+IHsKICAgICAgY29uc3QgbmV3VmFsdWVzID0gdmFsdWUuc2xpY2UoKTsKICAgICAgbmV3VmFsdWVzW2ldID0gZS50YXJnZXQudmFsdWU7CiAgICAgIG9uQ2hhbmdlKHsKICAgICAgICB0YXJnZXQ6IHsKICAgICAgICAgIG5hbWUsCiAgICAgICAgICB2YWx1ZTogbmV3VmFsdWVzCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxOQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pKSwgUmVhY3QuY3JlYXRlRWxlbWVudChHcmlkLCB7CiAgICBpdGVtOiB0cnVlLAogICAgeHM6IDMsCiAgICBzOiAxLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgewogICAgdHlwZTogImJ1dHRvbiIsCiAgICB2YXJpYW50OiAiY29udGFpbmVkIiwKICAgIGNvbG9yOiAic2Vjb25kYXJ5IiwKICAgIHN0eWxlOiB7CiAgICAgIG1hcmdpblRvcDogNgogICAgfSwKICAgIG9uQ2xpY2s6ICgpID0+IHsKICAgICAgY29uc3QgbmV3VmFsdWVzID0gdmFsdWUuc2xpY2UoKTsKICAgICAgbmV3VmFsdWVzLnNwbGljZShpLCAxKTsKICAgICAgY29uc3QgbmV3S2V5cyA9IGtleXMuc2xpY2UoKTsKICAgICAgbmV3S2V5cy5zcGxpY2UoaSwgMSk7CiAgICAgIHNldEtleXMobmV3S2V5cyk7CiAgICAgIG9uQ2hhbmdlKHsKICAgICAgICB0YXJnZXQ6IHsKICAgICAgICAgIG5hbWUsCiAgICAgICAgICB2YWx1ZTogbmV3VmFsdWVzCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRGVsZXRlSWNvbiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSkpKSkpLCBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgewogICAgdHlwZTogImJ1dHRvbiIsCiAgICB2YXJpYW50OiAiY29udGFpbmVkIiwKICAgIHN0eWxlOiB7CiAgICAgIGJhY2tncm91bmRDb2xvcjogJyMzOWQ0M2QnLAogICAgICBjb2xvcjogJ3doaXRlJywKICAgICAgbWFyZ2luVG9wOiAxMAogICAgfSwKICAgIG9uQ2xpY2s6ICgpID0+IHsKICAgICAgY29uc3QgbmV3VmFsdWVzID0gdmFsdWUuc2xpY2UoKTsKICAgICAgbmV3VmFsdWVzLnB1c2goJycpOwogICAgICBjb25zdCBuZXdLZXlzID0ga2V5cy5zbGljZSgpOwogICAgICBuZXdLZXlzLnB1c2goc2hvcnRpZC5nZW5lcmF0ZSgpKTsKICAgICAgc2V0S2V5cyhuZXdLZXlzKTsKICAgICAgb25DaGFuZ2UoewogICAgICAgIHRhcmdldDogewogICAgICAgICAgbmFtZSwKICAgICAgICAgIHZhbHVlOiBuZXdWYWx1ZXMKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDUzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIisiKSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiaHIiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA2OAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pKTsKfQoKX19zaWduYXR1cmVfXyhJbnB1dExpc3QsICJ1c2VTdGF0ZXtba2V5cywgc2V0S2V5c10odmFsdWUubWFwKCgpID0+IHNob3J0aWQuZ2VuZXJhdGUoKSkpfSIpOwoKaWYgKHR5cGVvZiBJbnB1dExpc3QgIT09ICd1bmRlZmluZWQnICYmIElucHV0TGlzdCAmJiBJbnB1dExpc3QgPT09IE9iamVjdChJbnB1dExpc3QpICYmIE9iamVjdC5pc0V4dGVuc2libGUoSW5wdXRMaXN0KSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShJbnB1dExpc3QsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJJbnB1dExpc3QiLAogICAgICBmaWxlbmFtZTogInNyY1xcQ29tcG9uZW50c1xcQWRtaW5cXFNldHRpbmdzXFxTZXR0aW5nUGFnZVxcSW5wdXRMaXN0XFxJbnB1dExpc3QuanMiCiAgICB9CiAgfSk7Cn0KCklucHV0TGlzdC5wcm9wVHlwZXMgPSB7CiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLAogIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYywKICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZywKICB2YWx1ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9iamVjdCksIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSkKfTsKSW5wdXRMaXN0LmRlZmF1bHRQcm9wcyA9IHsKICBvbkNoYW5nZTogKCkgPT4ge30sCiAgdGl0bGU6IG51bGwsCiAgdmFsdWU6IFtdCn07CjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoSW5wdXRMaXN0LCAiSW5wdXRMaXN0IiwgIkY6XFxwcm9qZWN0c1xcTm9kZVxcZGVsaXZlcnlcXGNsaWVudFxcc3JjXFxDb21wb25lbnRzXFxBZG1pblxcU2V0dGluZ3NcXFNldHRpbmdQYWdlXFxJbnB1dExpc3RcXElucHV0TGlzdC5qcyIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["F:\\projects\\Node\\delivery\\client\\src\\Components\\Admin\\Settings\\SettingPage\\InputList\\InputList.js"],"names":["React","useState","PropTypes","shortid","Button","Grid","Typography","DeleteIcon","SettingPageInput","InputList","onChange","name","value","title","map","generate","keys","setKeys","marginTop","marginBottom","v","i","e","newValues","slice","target","splice","newKeys","backgroundColor","color","push","propTypes","string","isRequired","func","oneOfType","arrayOf","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SettingPageInput from '../SettingPageInput/SettingPageInput';\n\nexport default function InputList({\n  onChange, name, value, title,\n}) {\n  const [keys, setKeys] = useState(value.map(() => shortid.generate()));\n  return (\n    <div name={name} style={{ marginTop: 10, marginBottom: 10 }}>\n      <Typography align=\"left\">{title}</Typography>\n      {value.map((v, i) => (\n        <div key={keys[i]}>\n          <Grid container>\n            <Grid item xs={9} s={11}>\n              <SettingPageInput\n                required\n                fullWidth\n                label={`${name} ${i}`}\n                name={`${name}${i}`}\n                value={v}\n                onChange={(e) => {\n                  const newValues = value.slice();\n                  newValues[i] = e.target.value;\n                  onChange({ target: { name, value: newValues } });\n                }}\n              />\n            </Grid>\n            <Grid item xs={3} s={1}>\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ marginTop: 6 }}\n                onClick={() => {\n                  const newValues = value.slice();\n                  newValues.splice(i, 1);\n                  const newKeys = keys.slice();\n                  newKeys.splice(i, 1);\n                  setKeys(newKeys);\n                  onChange({ target: { name, value: newValues } });\n                }}\n              >\n                <DeleteIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      ))}\n      <Button\n        type=\"button\"\n        variant=\"contained\"\n        style={{ backgroundColor: '#39d43d', color: 'white', marginTop: 10 }}\n        onClick={() => {\n          const newValues = value.slice();\n          newValues.push('');\n          const newKeys = keys.slice();\n          newKeys.push(shortid.generate());\n          setKeys(newKeys);\n          onChange({ target: { name, value: newValues } });\n        }}\n      >\n        +\n      </Button>\n      <hr />\n    </div>\n  );\n}\n\nInputList.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  title: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.object),\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nInputList.defaultProps = {\n  onChange: () => {},\n  title: null,\n  value: [],\n};\n"]}]}