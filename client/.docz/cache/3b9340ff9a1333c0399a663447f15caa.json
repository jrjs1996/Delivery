{"remainingRequest":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\source-map-loader\\index.js!F:\\projects\\Node\\delivery\\client\\src\\actions\\adminActions.js","dependencies":[{"path":"F:\\projects\\Node\\delivery\\client\\src\\actions\\adminActions.js","mtime":1561852850026},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\source-map-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:\\projects\\Node\\delivery\\client\\src\\actions\\adminActions.js"],"names":["axios","saveToken","removeToken","setAuthHeader","LOGIN_ADMIN","FETCH_ADMINS","UPDATE_ADMIN","CREATE_ADMIN","login","postData","dispatch","res","post","data","type","payload","username","error","changeCurrentAdminUsername","id","newUsername","put","console","log","changeCurrentAdminPassword","newPassword","password","updateAdmin","putData","_id","then","getCurrentAdminInfo","get","fetchAdmins","createAdmin","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { saveToken, removeToken, setAuthHeader } from '../utils/token';\nimport { LOGIN_ADMIN, FETCH_ADMINS, UPDATE_ADMIN, CREATE_ADMIN } from './types';\n\nexport const login = postData => async (dispatch) => {\n  try {\n    const res = await axios.post('http://localhost:9000/admins/login/', postData);\n    saveToken(res.data, true);\n    dispatch({\n      type: LOGIN_ADMIN,\n      payload: {\n        username: postData.username,\n      },\n    });\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const changeCurrentAdminUsername = (id, newUsername) => async (dispatch) => {\n  try {\n    const res = await axios.put(`http://localhost:9000/admins/${id}`,\n      { username: newUsername }, setAuthHeader());\n    dispatch({\n      type: LOGIN_ADMIN,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const changeCurrentAdminPassword = (id, newPassword) => async (dispatch) => {\n  try {\n    const res = await axios.put(`http://localhost:9000/admins/${id}`,\n      { password: newPassword }, setAuthHeader());\n    dispatch({\n      type: LOGIN_ADMIN,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const updateAdmin = putData => (dispatch) => {\n  axios.put(`http://localhost:9000/admins/${putData._id}`, putData, setAuthHeader())\n    .then(() => {\n      const payload = putData;\n      dispatch({\n        type: UPDATE_ADMIN,\n        payload,\n      });\n    });\n};\n\nexport const getCurrentAdminInfo = () => async (dispatch) => {\n  try {\n    const res = await axios.get('http://localhost:9000/admins/login/', setAuthHeader());\n    dispatch({\n      type: LOGIN_ADMIN,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchAdmins = () => async (dispatch) => {\n  const res = await axios.get('http://localhost:9000/admins/', setAuthHeader());\n  try {\n    dispatch({\n      type: FETCH_ADMINS,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createAdmin = postData => async (dispatch) => {\n  const res = await axios.post('http://localhost:9000/admins/', postData, setAuthHeader());\n  console.log(res);\n  try {\n    dispatch({\n      type: CREATE_ADMIN,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const logout = () => () => {\n  removeToken();\n};\n"]}]}