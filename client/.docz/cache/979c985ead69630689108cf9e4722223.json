{"remainingRequest":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\babel-loader\\lib\\index.js??ref--6-1!C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\@mdx-js\\loader\\index.js??ref--6-2!C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\source-map-loader\\index.js!F:\\projects\\Node\\delivery\\client\\src\\Components\\Admin\\Settings\\ChangePassword\\ChangePassword.mdx","dependencies":[{"path":"F:\\projects\\Node\\delivery\\client\\src\\Components\\Admin\\Settings\\ChangePassword\\ChangePassword.mdx","mtime":1562674658727},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\@mdx-js\\loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\jrjs1\\AppData\\Roaming\\npm\\node_modules\\docz\\node_modules\\source-map-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6XFxVc2Vyc1xcanJqczFcXEFwcERhdGFcXFJvYW1pbmdcXG5wbVxcbm9kZV9tb2R1bGVzXFxkb2N6XFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gIkM6XFxVc2Vyc1xcanJqczFcXEFwcERhdGFcXFJvYW1pbmdcXG5wbVxcbm9kZV9tb2R1bGVzXFxkb2N6XFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICJGOlxccHJvamVjdHNcXE5vZGVcXGRlbGl2ZXJ5XFxjbGllbnRcXHNyY1xcQ29tcG9uZW50c1xcQWRtaW5cXFNldHRpbmdzXFxDaGFuZ2VQYXNzd29yZFxcQ2hhbmdlUGFzc3dvcmQubWR4IjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQuc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCi8qIEBqc3ggbWR4ICovCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnOwovKiBAanN4IG1keCAqLwoKaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IFBsYXlncm91bmQsIFByb3BzIH0gZnJvbSAnZG9jeic7CmltcG9ydCB7IENoYW5nZVBhc3N3b3JkQ29tcG9uZW50IH0gZnJvbSAnLi9DaGFuZ2VQYXNzd29yZCc7CmltcG9ydCB7IGFkbWluc01vY2sgfSBmcm9tICcuLi8uLi8uLi8uLi90ZXN0cy9tb2Nrcyc7Cgpjb25zdCBtYWtlU2hvcnRjb2RlID0gbmFtZSA9PiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKSB7CiAgY29uc29sZS53YXJuKCJDb21wb25lbnQgIiArIG5hbWUgKyAiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTsKICByZXR1cm4gbWR4KCJkaXYiLCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSk7Cn07Cgpjb25zdCBsYXlvdXRQcm9wcyA9IHt9Owpjb25zdCBNRFhMYXlvdXQgPSAid3JhcHBlciI7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZikgewogIGxldCBjb21wb25lbnRzID0gX3JlZi5jb21wb25lbnRzLAogICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbImNvbXBvbmVudHMiXSk7CgogIHJldHVybiBtZHgoTURYTGF5b3V0LCBPYmplY3QuYXNzaWduKHt9LCBsYXlvdXRQcm9wcywgcHJvcHMsIHsKICAgIGNvbXBvbmVudHM6IGNvbXBvbmVudHMsCiAgICBtZHhUeXBlOiAiTURYTGF5b3V0IiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIG1keCgiaDEiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJjaGFuZ2UtcGFzc3dvcmQiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIkNoYW5nZSBQYXNzd29yZCIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyOAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJVcGRhdGVkIDA5LzA3LzIwMTkiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRm9ybSBmb3IgdGhlIGN1cnJlbnQgdXNlciB0byBjaGFuZ2UgdGhlaXIgcGFzc3dvcmQuIiksIG1keChQcm9wcywgewogICAgb2Y6IENoYW5nZVBhc3N3b3JkQ29tcG9uZW50LAogICAgbWR4VHlwZTogIlByb3BzIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIG1keChQbGF5Z3JvdW5kLCB7CiAgICBfX3Bvc2l0aW9uOiAxLAogICAgX19jb2RlOiAnKCkgPT4ge1xuICBjb25zdCBbbWVzc2FnZSwgc2V0TWVzc2FnZV0gPSB1c2VTdGF0ZShcJ1wnKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxwPnttZXNzYWdlfTwvcD5cbiAgICAgIDxDaGFuZ2VQYXNzd29yZENvbXBvbmVudFxuICAgICAgICBjaGFuZ2VDdXJyZW50QWRtaW5QYXNzd29yZD17KGlkLCBwYXNzd29yZCkgPT4ge1xuICAgICAgICAgIHNldE1lc3NhZ2UoYGlkOiAke2lkfSBwYXNzd29yZDogJHtwYXNzd29yZH1gKVxuICAgICAgICB9fVxuICAgICAgICBjdXJyZW50QWRtaW49e2FkbWluc01vY2tbMF19XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59JywKICAgIF9fc2NvcGU6IHsKICAgICAgcHJvcHM6IHRoaXMgPyB0aGlzLnByb3BzIDogcHJvcHMsCiAgICAgIHVzZVN0YXRlLAogICAgICBQbGF5Z3JvdW5kLAogICAgICBQcm9wcywKICAgICAgQ2hhbmdlUGFzc3dvcmRDb21wb25lbnQsCiAgICAgIGFkbWluc01vY2sKICAgIH0sCiAgICBfX2NvZGVzYW5kYm94OiAidW5kZWZpbmVkIiwKICAgIG1keFR5cGU6ICJQbGF5Z3JvdW5kIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgX19zaWduYXR1cmVfXygoKSA9PiB7CiAgICBjb25zdCBfdXNlU3RhdGUgPSB1c2VTdGF0ZSgnJyksCiAgICAgICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgICAgIG1lc3NhZ2UgPSBfdXNlU3RhdGUyWzBdLAogICAgICAgICAgc2V0TWVzc2FnZSA9IF91c2VTdGF0ZTJbMV07CgogICAgcmV0dXJuIG1keCgiZGl2IiwgewogICAgICBfX3NvdXJjZTogewogICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgbGluZU51bWJlcjogNDEKICAgICAgfSwKICAgICAgX19zZWxmOiB0aGlzCiAgICB9LCBtZHgoInAiLCB7CiAgICAgIF9fc291cmNlOiB7CiAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICBsaW5lTnVtYmVyOiA0MgogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0sIG1lc3NhZ2UpLCBtZHgoQ2hhbmdlUGFzc3dvcmRDb21wb25lbnQsIHsKICAgICAgY2hhbmdlQ3VycmVudEFkbWluUGFzc3dvcmQ6IChpZCwgcGFzc3dvcmQpID0+IHsKICAgICAgICBzZXRNZXNzYWdlKCJpZDogIi5jb25jYXQoaWQsICIgcGFzc3dvcmQ6ICIpLmNvbmNhdChwYXNzd29yZCkpOwogICAgICB9LAogICAgICBjdXJyZW50QWRtaW46IGFkbWluc01vY2tbMF0sCiAgICAgIG1keFR5cGU6ICJDaGFuZ2VQYXNzd29yZENvbXBvbmVudCIsCiAgICAgIF9fc291cmNlOiB7CiAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICBsaW5lTnVtYmVyOiA0MwogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0pKTsKICB9LCAidXNlU3RhdGV7W21lc3NhZ2UsIHNldE1lc3NhZ2VdKCcnKX0iKSkpOwp9CgppZiAodHlwZW9mIE1EWENvbnRlbnQgIT09ICd1bmRlZmluZWQnICYmIE1EWENvbnRlbnQgJiYgTURYQ29udGVudCA9PT0gT2JqZWN0KE1EWENvbnRlbnQpICYmIE9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIk1EWENvbnRlbnQiLAogICAgICBmaWxlbmFtZTogInNyY1xcQ29tcG9uZW50c1xcQWRtaW5cXFNldHRpbmdzXFxDaGFuZ2VQYXNzd29yZFxcQ2hhbmdlUGFzc3dvcmQubWR4IgogICAgfQogIH0pOwp9CgpNRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihtYWtlU2hvcnRjb2RlLCAibWFrZVNob3J0Y29kZSIsICJGOlxccHJvamVjdHNcXE5vZGVcXGRlbGl2ZXJ5XFxjbGllbnRcXHNyY1xcQ29tcG9uZW50c1xcQWRtaW5cXFNldHRpbmdzXFxDaGFuZ2VQYXNzd29yZFxcQ2hhbmdlUGFzc3dvcmQubWR4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIobGF5b3V0UHJvcHMsICJsYXlvdXRQcm9wcyIsICJGOlxccHJvamVjdHNcXE5vZGVcXGRlbGl2ZXJ5XFxjbGllbnRcXHNyY1xcQ29tcG9uZW50c1xcQWRtaW5cXFNldHRpbmdzXFxDaGFuZ2VQYXNzd29yZFxcQ2hhbmdlUGFzc3dvcmQubWR4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoTURYTGF5b3V0LCAiTURYTGF5b3V0IiwgIkY6XFxwcm9qZWN0c1xcTm9kZVxcZGVsaXZlcnlcXGNsaWVudFxcc3JjXFxDb21wb25lbnRzXFxBZG1pblxcU2V0dGluZ3NcXENoYW5nZVBhc3N3b3JkXFxDaGFuZ2VQYXNzd29yZC5tZHgiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihNRFhDb250ZW50LCAiTURYQ29udGVudCIsICJGOlxccHJvamVjdHNcXE5vZGVcXGRlbGl2ZXJ5XFxjbGllbnRcXHNyY1xcQ29tcG9uZW50c1xcQWRtaW5cXFNldHRpbmdzXFxDaGFuZ2VQYXNzd29yZFxcQ2hhbmdlUGFzc3dvcmQubWR4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["F:\\projects\\Node\\delivery\\client\\src\\Components\\Admin\\Settings\\ChangePassword\\ChangePassword.mdx"],"names":["React","mdx","useState","Playground","Props","ChangePasswordComponent","adminsMock","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","message","setMessage","id","password","isMDXComponent"],"mappings":";;;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AACF,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,MAAlC;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,MAAMC,aAAa,GAAGC,IAAI,IAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,SAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAHD;;AAKA,MAAMG,WAAW,GAAG,EAApB;AAGA,MAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALK,EAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DANK,EAOL,IAAC,KAAD;AAAO,IAAA,EAAE,EAAEX,uBAAX;AAAoC,IAAA,OAAO,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPK,EAQL,IAAC,UAAD;AAAY,IAAA,UAAU,EAAE,CAAxB;AAA2B,IAAA,MAAM,EAAE,4UAAnC;AAAiX,IAAA,OAAO,EAAE;AACxXK,MAAAA,KAAK,EAAE,OAAO,KAAKA,KAAZ,GAAoBA,KAD6V;AAExXR,MAAAA,QAFwX;AAGxXC,MAAAA,UAHwX;AAIxXC,MAAAA,KAJwX;AAKxXC,MAAAA,uBALwX;AAMxXC,MAAAA;AANwX,KAA1X;AAOG,IAAA,aAAa,aAPhB;AAO+B,IAAA,OAAO,EAAC,YAPvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQD,MAAM;AAAA,sBAC6BJ,QAAQ,CAAC,EAAD,CADrC;AAAA;AAAA,UACMe,OADN;AAAA,UACeC,UADf;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAJ,CADO,EAEP,IAAC,uBAAD;AAAyB,MAAA,0BAA0B,EAAE,CAACE,EAAD,EAAKC,QAAL,KAAkB;AACnEF,QAAAA,UAAU,eAAQC,EAAR,wBAAwBC,QAAxB,EAAV;AACD,OAFH;AAEK,MAAA,YAAY,EAAEd,UAAU,CAAC,CAAD,CAF7B;AAEkC,MAAA,OAAO,EAAC,yBAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFO,CAAP;AAMD,GAhBH,yCARK,CAAP;AA2BD;;;;;;;;;;;;;AAEDS,UAAU,CAACM,cAAX,GAA4B,IAA5B;;;;;;;;;;0BA1CMd,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { ChangePasswordComponent } from './ChangePassword';\nimport { adminsMock } from '../../../../tests/mocks';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"change-password\"\n    }}>{`Change Password`}</h1>\n    <p>{`Updated 09/07/2019`}</p>\n    <p>{`Form for the current user to change their password.`}</p>\n    <Props of={ChangePasswordComponent} mdxType=\"Props\" />\n    <Playground __position={1} __code={'() => {\\n  const [message, setMessage] = useState(\\'\\')\\n\\n  return (\\n    <div>\\n      <p>{message}</p>\\n      <ChangePasswordComponent\\n        changeCurrentAdminPassword={(id, password) => {\\n          setMessage(`id: ${id} password: ${password}`)\\n        }}\\n        currentAdmin={adminsMock[0]}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      ChangePasswordComponent,\n      adminsMock\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [message, setMessage] = useState('');\n        return <div>\n        <p>{message}</p>\n        <ChangePasswordComponent changeCurrentAdminPassword={(id, password) => {\n            setMessage(`id: ${id} password: ${password}`);\n          }} currentAdmin={adminsMock[0]} mdxType=\"ChangePasswordComponent\" />\n      </div>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}