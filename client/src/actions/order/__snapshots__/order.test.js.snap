// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add to current order Dispatches ADD_TO_CURRENT_ORDER with item as payload 1`] = `
Array [
  Object {
    "payload": Object {
      "__v": 0,
      "_id": "0",
      "archived": false,
      "created": "Now",
      "description": "A hamburger (short: burger) is a sandwich consisting of one or more cooked
    patties of ground meat, usually beef, placed inside a sliced bread roll or bun. The
    patty may be pan fried, grilled, or flame broiled. Hamburgers are often served with
     cheese, lettuce, tomato, onion, pickles, bacon, or chiles; condiments such as ketchup,
     mayonnaise, mustard, relish, or 'special sauce'; and are frequently placed on sesame
    seed buns. A hamburger topped with cheese is called a cheeseburger.",
      "menuNumber": 1,
      "price": 10.5,
      "revision": 0,
      "title": "Hamburger",
    },
    "type": "ADD_TO_CURRENT_ORDER",
  },
]
`;

exports[`Create order Dispatches ADD_ORDER with payload of response data on success 1`] = `
Array [
  Object {
    "payload": Object {
      "mock": "MockData",
    },
    "type": "ADD_ORDER",
  },
]
`;

exports[`Create order Dispatches ERROR on error 1`] = `
Array [
  Object {
    "payload": "Unable to create order",
    "type": "ERROR",
  },
]
`;

exports[`Delete Current Order Dispatches DELETE_CURRENT_ORDER 1`] = `
Array [
  Object {
    "type": "DELETE_CURRENT_ORDER",
  },
]
`;

exports[`Fetch open orders Dispatches ERROR on error 1`] = `
Array [
  Object {
    "payload": "Unable to fetch orders",
    "type": "ERROR",
  },
]
`;

exports[`Fetch open orders Dispatches FETCH_ORDERS with response data on success 1`] = `
Array [
  Object {
    "payload": Object {
      "mock": "MockData",
    },
    "type": "FETCH_ORDER",
  },
]
`;

exports[`Fetch orders Dispatches ERROR on error 1`] = `
Array [
  Object {
    "payload": "Unable to fetch orders",
    "type": "ERROR",
  },
]
`;

exports[`Fetch orders Dispatches FETCH_ORDERS with response data on success 1`] = `
Array [
  Object {
    "payload": Object {
      "mock": "MockData",
    },
    "type": "FETCH_ORDER",
  },
]
`;

exports[`Remove from current order Dispatches REMOVE_FROM_CURRENT_ORDER with the given id 1`] = `
Array [
  Object {
    "payload": "TestId",
    "type": "REMOVE_FROM_CURRENT_ORDER",
  },
]
`;

exports[`Update order Dispatches ERROR on error 1`] = `
Array [
  Object {
    "payload": "Unable to update order.",
    "type": "ERROR",
  },
]
`;

exports[`Update order Dispatches UPDATE_ORDER with given id and putdata on success 1`] = `
Array [
  Object {
    "payload": Object {
      "_id": 1234,
      "mockPutData": "MockPutData",
    },
    "type": "UPDATE_ORDER",
  },
]
`;
